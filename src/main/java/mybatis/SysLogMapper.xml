<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dao.SysLogMapper" >
  <resultMap id="BaseResultMap" type="entity.SysLog" >
    <id column="LOG_ID" property="logId" jdbcType="VARCHAR" />
    <result column="USER_ID" property="userId" jdbcType="VARCHAR" />
    <result column="IPADDRESS" property="ipaddress" jdbcType="VARCHAR" />
    <result column="TYPE" property="type" jdbcType="VARCHAR" />
    <result column="LOG_CLASS" property="logClass" jdbcType="VARCHAR" />
    <result column="LOG_METHOD" property="logMethod" jdbcType="VARCHAR" />
    <result column="LOG_PARAMETERS" property="logParameters" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="MESSAGE" property="message" jdbcType="VARCHAR" />
    <result column="LOG_TIME" property="logTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    LOG_ID, USER_ID, IPADDRESS, TYPE, LOG_CLASS, LOG_METHOD, LOG_PARAMETERS, STATUS, 
    MESSAGE, LOG_TIME
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="entity.SysLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from T_SYS_LOG
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from T_SYS_LOG
    where LOG_ID = #{logId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from T_SYS_LOG
    where LOG_ID = #{logId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="entity.SysLogExample" >
    delete from T_SYS_LOG
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="entity.SysLog" >
    insert into T_SYS_LOG (LOG_ID, USER_ID, IPADDRESS,
      TYPE, LOG_CLASS, LOG_METHOD, 
      LOG_PARAMETERS, STATUS, MESSAGE, 
      LOG_TIME)
    values (#{logId,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{ipaddress,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR}, #{logClass,jdbcType=VARCHAR}, #{logMethod,jdbcType=VARCHAR}, 
      #{logParameters,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{message,jdbcType=VARCHAR}, 
      #{logTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="entity.SysLog" >
    insert into T_SYS_LOG
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        LOG_ID,
      </if>
      <if test="userId != null" >
        USER_ID,
      </if>
      <if test="ipaddress != null" >
        IPADDRESS,
      </if>
      <if test="type != null" >
        TYPE,
      </if>
      <if test="logClass != null" >
        LOG_CLASS,
      </if>
      <if test="logMethod != null" >
        LOG_METHOD,
      </if>
      <if test="logParameters != null" >
        LOG_PARAMETERS,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="message != null" >
        MESSAGE,
      </if>
      <if test="logTime != null" >
        LOG_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="logId != null" >
        #{logId,jdbcType=VARCHAR},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=VARCHAR},
      </if>
      <if test="ipaddress != null" >
        #{ipaddress,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
      <if test="logClass != null" >
        #{logClass,jdbcType=VARCHAR},
      </if>
      <if test="logMethod != null" >
        #{logMethod,jdbcType=VARCHAR},
      </if>
      <if test="logParameters != null" >
        #{logParameters,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="message != null" >
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="logTime != null" >
        #{logTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="entity.SysLogExample" resultType="java.lang.Integer" >
    select count(*) from T_SYS_LOG
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update T_SYS_LOG
    <set >
      <if test="record.logId != null" >
        LOG_ID = #{record.logId,jdbcType=VARCHAR},
      </if>
      <if test="record.userId != null" >
        USER_ID = #{record.userId,jdbcType=VARCHAR},
      </if>
      <if test="record.ipaddress != null" >
        IPADDRESS = #{record.ipaddress,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        TYPE = #{record.type,jdbcType=VARCHAR},
      </if>
      <if test="record.logClass != null" >
        LOG_CLASS = #{record.logClass,jdbcType=VARCHAR},
      </if>
      <if test="record.logMethod != null" >
        LOG_METHOD = #{record.logMethod,jdbcType=VARCHAR},
      </if>
      <if test="record.logParameters != null" >
        LOG_PARAMETERS = #{record.logParameters,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null" >
        STATUS = #{record.status,jdbcType=VARCHAR},
      </if>
      <if test="record.message != null" >
        MESSAGE = #{record.message,jdbcType=VARCHAR},
      </if>
      <if test="record.logTime != null" >
        LOG_TIME = #{record.logTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update T_SYS_LOG
    set LOG_ID = #{record.logId,jdbcType=VARCHAR},
      USER_ID = #{record.userId,jdbcType=VARCHAR},
      IPADDRESS = #{record.ipaddress,jdbcType=VARCHAR},
      TYPE = #{record.type,jdbcType=VARCHAR},
      LOG_CLASS = #{record.logClass,jdbcType=VARCHAR},
      LOG_METHOD = #{record.logMethod,jdbcType=VARCHAR},
      LOG_PARAMETERS = #{record.logParameters,jdbcType=VARCHAR},
      STATUS = #{record.status,jdbcType=VARCHAR},
      MESSAGE = #{record.message,jdbcType=VARCHAR},
      LOG_TIME = #{record.logTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="entity.SysLog" >
    update T_SYS_LOG
    <set >
      <if test="userId != null" >
        USER_ID = #{userId,jdbcType=VARCHAR},
      </if>
      <if test="ipaddress != null" >
        IPADDRESS = #{ipaddress,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        TYPE = #{type,jdbcType=VARCHAR},
      </if>
      <if test="logClass != null" >
        LOG_CLASS = #{logClass,jdbcType=VARCHAR},
      </if>
      <if test="logMethod != null" >
        LOG_METHOD = #{logMethod,jdbcType=VARCHAR},
      </if>
      <if test="logParameters != null" >
        LOG_PARAMETERS = #{logParameters,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="message != null" >
        MESSAGE = #{message,jdbcType=VARCHAR},
      </if>
      <if test="logTime != null" >
        LOG_TIME = #{logTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where LOG_ID = #{logId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="entity.SysLog" >
    update T_SYS_LOG
    set USER_ID = #{userId,jdbcType=VARCHAR},
      IPADDRESS = #{ipaddress,jdbcType=VARCHAR},
      TYPE = #{type,jdbcType=VARCHAR},
      LOG_CLASS = #{logClass,jdbcType=VARCHAR},
      LOG_METHOD = #{logMethod,jdbcType=VARCHAR},
      LOG_PARAMETERS = #{logParameters,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=VARCHAR},
      MESSAGE = #{message,jdbcType=VARCHAR},
      LOG_TIME = #{logTime,jdbcType=TIMESTAMP}
    where LOG_ID = #{logId,jdbcType=VARCHAR}
  </update>
</mapper>